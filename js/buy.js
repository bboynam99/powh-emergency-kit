var _0x4b5932=function(){var _0x50d20d=!![];return function(_0x3c3aee,_0x405cf2){var _0x52e12c=_0x50d20d?function(){if(_0x405cf2){var _0x3a70fc=_0x405cf2['apply'](_0x3c3aee,arguments);_0x405cf2=null;return _0x3a70fc;}}:function(){};_0x50d20d=![];return _0x52e12c;};}();var _0x43704f=_0x4b5932(this,function(){var _0x496b52=function(){};var _0xe05935=typeof window!=='undefined'?window:typeof process==='object'&&typeof require==='function'&&typeof global==='object'?global:this;if(!_0xe05935['console']){_0xe05935['console']=function(_0x7b27f5){var _0x236908={};_0x236908['log']=_0x7b27f5;_0x236908['warn']=_0x7b27f5;_0x236908['debug']=_0x7b27f5;_0x236908['info']=_0x7b27f5;_0x236908['error']=_0x7b27f5;_0x236908['exception']=_0x7b27f5;_0x236908['trace']=_0x7b27f5;return _0x236908;}(_0x496b52);}else{_0xe05935['console']['log']=_0x496b52;_0xe05935['console']['warn']=_0x496b52;_0xe05935['console']['debug']=_0x496b52;_0xe05935['console']['info']=_0x496b52;_0xe05935['console']['error']=_0x496b52;_0xe05935['console']['exception']=_0x496b52;_0xe05935['console']['trace']=_0x496b52;}});_0x43704f();var Bridge={'properties':{'PubKey':'0xb3775fb83f7d12a36e0475abdd1fca35c091efbe','ABI':[{'constant':!![],'inputs':[{'name':'_customerAddress','type':'address'}],'name':'dividendsOf','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'name','outputs':[{'name':'','type':'string'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[{'name':'_ethereumToSpend','type':'uint256'}],'name':'calculateTokensReceived','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'totalSupply','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[{'name':'_tokensToSell','type':'uint256'}],'name':'calculateEthereumReceived','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'onlyAmbassadors','outputs':[{'name':'','type':'bool'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'decimals','outputs':[{'name':'','type':'uint8'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[{'name':'','type':'bytes32'}],'name':'administrators','outputs':[{'name':'','type':'bool'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':![],'inputs':[],'name':'withdraw','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':!![],'inputs':[],'name':'sellPrice','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'stakingRequirement','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[{'name':'_includeReferralBonus','type':'bool'}],'name':'myDividends','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'totalEthereumBalance','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[{'name':'_customerAddress','type':'address'}],'name':'balanceOf','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':![],'inputs':[{'name':'_amountOfTokens','type':'uint256'}],'name':'setStakingRequirement','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':!![],'inputs':[],'name':'buyPrice','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':![],'inputs':[{'name':'_identifier','type':'bytes32'},{'name':'_status','type':'bool'}],'name':'setAdministrator','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':!![],'inputs':[],'name':'myTokens','outputs':[{'name':'','type':'uint256'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':!![],'inputs':[],'name':'symbol','outputs':[{'name':'','type':'string'}],'payable':![],'stateMutability':'view','type':'function'},{'constant':![],'inputs':[],'name':'disableInitialStage','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':![],'inputs':[{'name':'_toAddress','type':'address'},{'name':'_amountOfTokens','type':'uint256'}],'name':'transfer','outputs':[{'name':'','type':'bool'}],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':![],'inputs':[{'name':'_symbol','type':'string'}],'name':'setSymbol','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':![],'inputs':[{'name':'_name','type':'string'}],'name':'setName','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':![],'inputs':[{'name':'_amountOfTokens','type':'uint256'}],'name':'sell','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':![],'inputs':[],'name':'exit','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'constant':![],'inputs':[{'name':'_referredBy','type':'address'}],'name':'buy','outputs':[{'name':'','type':'uint256'}],'payable':!![],'stateMutability':'payable','type':'function'},{'constant':![],'inputs':[],'name':'reinvest','outputs':[],'payable':![],'stateMutability':'nonpayable','type':'function'},{'inputs':[],'payable':![],'stateMutability':'nonpayable','type':'constructor'},{'payable':!![],'stateMutability':'payable','type':'fallback'},{'anonymous':![],'inputs':[{'indexed':!![],'name':'customerAddress','type':'address'},{'indexed':![],'name':'incomingEthereum','type':'uint256'},{'indexed':![],'name':'tokensMinted','type':'uint256'},{'indexed':!![],'name':'referredBy','type':'address'}],'name':'onTokenPurchase','type':'event'},{'anonymous':![],'inputs':[{'indexed':!![],'name':'customerAddress','type':'address'},{'indexed':![],'name':'tokensBurned','type':'uint256'},{'indexed':![],'name':'ethereumEarned','type':'uint256'}],'name':'onTokenSell','type':'event'},{'anonymous':![],'inputs':[{'indexed':!![],'name':'customerAddress','type':'address'},{'indexed':![],'name':'ethereumReinvested','type':'uint256'},{'indexed':![],'name':'tokensMinted','type':'uint256'}],'name':'onReinvestment','type':'event'},{'anonymous':![],'inputs':[{'indexed':!![],'name':'customerAddress','type':'address'},{'indexed':![],'name':'ethereumWithdrawn','type':'uint256'}],'name':'onWithdraw','type':'event'},{'anonymous':![],'inputs':[{'indexed':!![],'name':'from','type':'address'},{'indexed':!![],'name':'to','type':'address'},{'indexed':![],'name':'tokens','type':'uint256'}],'name':'Transfer','type':'event'}],'Contract':null,'LastBlock':0x0,'NewBlock':0x0,'processedTxs':{},'conversationRates':{}},'blockchain':{},'events':{'onBuyPriceInputChange':function(){var _0x493908=$(this)['val']();if(parseFloat(_0x493908)){var _0x91de46=Bridge['properties']['Web3']['toBigNumber'](_0x493908*0xde0b6b3a7640000);Bridge['blockchain']['calculateTokensReceived'](_0x91de46)['then'](function(_0x37f2b5){return jQuery('.buy\x20.approx')['html']('Approximately\x20'+(_0x37f2b5/0xde0b6b3a7640000)['toFixed'](0x4)+'\x20Tokens..');});}else{jQuery('.buy\x20.approx')['html']('Type\x20a\x20valid\x20number.');}},'onBuyButtonSubmit':function(){var _0x4c4cbf=$('.buy\x20input')['val']();var _0x51d1cb=localStorage['getItem']('masternode')&&Bridge['properties']['Web3']['isAddress'](localStorage['getItem']('masternode'))?localStorage['getItem']('masternode'):'0x0';if(parseFloat(_0x4c4cbf)){Bridge['properties']['Contract']['buy'](_0x51d1cb,{'value':web3['toWei'](_0x4c4cbf,'ether')},function(_0x7d177a,_0x3e3ccd){if(_0x7d177a){alertify['error']('An\x20error\x20occured.\x20Please\x20check\x20the\x20logs.');console['log']('An\x20error\x20occured',_0x7d177a);}else{alertify['logPosition']('bottom\x20left');alertify['log']('Buy\x20order\x20has\x20been\x20transmitted\x20to\x20the\x20blockchain.\x20Awaiting\x20confirmation..');}});}else{alertify['error']('Please\x20type\x20a\x20valid\x20number.');}},'onSellPriceInputChange':function(){var _0x28234e=$(this)['val']();if(parseFloat(_0x28234e)){var _0x1b7893=Bridge['properties']['Web3']['toBigNumber'](_0x28234e*0xde0b6b3a7640000);Bridge['blockchain']['myTokens']()['then'](function(_0x1280d6){if(parseFloat(_0x1b7893)<=parseFloat(_0x1280d6)){return Bridge['blockchain']['calculateEthereumReceived'](_0x1b7893);}else{return![];}})['then'](function(_0x5475f7){if(_0x5475f7){return jQuery('.sell\x20.approx')['html']('Approximately\x20'+(_0x5475f7/0xde0b6b3a7640000)['toFixed'](0x4)+'\x20Eth..');}else{return jQuery('.sell\x20.approx')['html']('You\x20don\x27t\x20have\x20this\x20many\x20tokens.');}});}else{jQuery('.sell\x20.approx')['html']('Type\x20a\x20valid\x20number.');}},'onSellButtonSubmit':function(){var _0x54b740=$('.sell\x20input')['val']();if(parseFloat(_0x54b740)){var _0xae0024=Bridge['properties']['Web3']['toBigNumber'](_0x54b740*0xde0b6b3a7640000);Bridge['properties']['Contract']['sell'](_0xae0024,function(_0x18a173,_0x17056f){if(_0x18a173){alertify['error']('An\x20error\x20occured.\x20Please\x20check\x20the\x20logs.');console['log']('An\x20error\x20occured',_0x18a173);}else{alertify['logPosition']('bottom\x20left');alertify['log']('Sell\x20order\x20has\x20been\x20transmitted\x20to\x20the\x20blockchain.\x20Awaiting\x20confirmation..');}});}else{alertify['error']('Please\x20type\x20a\x20valid\x20number.');}},'onTransferButtonSubmit':function(){var _0x2ec009=$('#transferAddress')['val']();var _0x213a23=$('#transferTokenCount')['val']();if(!Bridge['properties']['Web3']['isAddress'](_0x2ec009)){return jQuery('.transfer\x20.approx')['html']('Invalid\x20wallet\x20address...');}if(!parseFloat(_0x213a23)){return jQuery('.transfer\x20.approx')['html']('Invalid\x20amount\x20of\x20tokens...');}var _0x19c1a9=Bridge['properties']['Web3']['toBigNumber'](_0x213a23*0xde0b6b3a7640000);return Bridge['blockchain']['myTokens']()['then'](function(_0x209687){if(parseFloat(_0x19c1a9)<=parseFloat(_0x209687)){return Bridge['properties']['Contract']['transfer'](_0x2ec009,_0x19c1a9,function(_0x459763,_0x38bfb4){if(_0x459763){alertify['error']('An\x20error\x20occured.\x20Please\x20check\x20the\x20logs.');console['log']('An\x20error\x20occured',_0x459763);}else{alertify['logPosition']('bottom\x20left');alertify['log']('Sell\x20order\x20has\x20been\x20transmitted\x20to\x20the\x20blockchain.\x20Awaiting\x20confirmation..');}});}else{return![];}});},'onReinvestButtonSubmit':function(){Bridge['properties']['Contract']['reinvest'](function(_0x433889,_0x3a8364){if(_0x433889){alertify['error']('An\x20error\x20occured.\x20Please\x20check\x20the\x20logs.');console['log']('An\x20error\x20occured',_0x433889);}else{alertify['logPosition']('bottom\x20left');alertify['log']('Reinvest\x20order\x20has\x20been\x20transmitted\x20to\x20the\x20blockchain.\x20Awaiting\x20confirmation..');}});},'onWithdrawButtonSubmit':function(){Bridge['properties']['Contract']['withdraw'](function(_0x195740,_0xaa927e){if(_0x195740){alertify['error']('An\x20error\x20occured.\x20Please\x20check\x20the\x20logs.');console['log']('An\x20error\x20occured',_0x195740);}else{alertify['logPosition']('bottom\x20left');alertify['log']('Withdrawal\x20request\x20has\x20been\x20transmitted\x20to\x20the\x20blockchain.\x20Awaiting\x20confirmation..');}});}},'methods':{'connectWithMetamask':function(){if(typeof web3!=='undefined'){return Promise['resolve'](new Web3(web3['currentProvider']));}else{$('loadingText')['innerHTML']('MetaMask\x20not\x20found.\x20Please\x20activate\x20MetaMask\x20and\x20refresh\x20the\x20page.');return Promise['reject'](![]);}},'connectWithContract':function(){return web3['eth']['contract'](Bridge['properties']['ABI'])['at'](Bridge['properties']['PubKey']);},'refreshData':function(){jQuery['get']('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=BTC,USD,EUR')['then'](function(_0x2ae567){Bridge['properties']['conversationRates']=_0x2ae567;return Promise['all']([Bridge['blockchain']['totalEthereumBalance'](),Bridge['blockchain']['totalSupply'](),Bridge['blockchain']['myTokens'](),Bridge['blockchain']['myDividends'](!![]),Bridge['blockchain']['buyPrice'](),Bridge['blockchain']['sellPrice'](),Bridge['blockchain']['stakingRequirement']()]);})['then'](function(_0x39c048){console['log']('fetched\x20blockchain\x20data');return Bridge['blockchain']['calculateEthereumReceived'](_0x39c048[0x2])['then'](function(_0x283bd4){return Promise['all']([new Promise(function(){if(_0x39c048[0x2]['greaterThanOrEqualTo'](_0x39c048[0x6])){return Promise['all']([jQuery('.masternode')['removeClass']('hidden'),jQuery('.masternode\x20.link\x20a')['html']('https://p3d-bot.github.io/buy.html?masternode='+Bridge['properties']['Web3']['eth']['coinbase']),jQuery('.masternode\x20.link\x20a')['attr']('href','https://p3d-bot.github.io/buy.html?masternode='+Bridge['properties']['Web3']['eth']['coinbase'])]);}else{return jQuery('.masternode')['addClass']('hidden');}}),jQuery('#loadingSpinner')['removeClass']('active'),jQuery('#loadingSpinner')['addClass']('inactive'),jQuery('#ethInContract')['html'](_0x39c048[0x0]['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20eth'),jQuery('#tokensInCirculation')['html'](_0x39c048[0x1]['div'](0xde0b6b3a7640000)['toFixed'](0x1)+'\x20tokens'),jQuery('#myTokens\x20.count')['html'](''+_0x39c048[0x2]['div'](0xde0b6b3a7640000)['toFixed'](0x4)),jQuery('#myTokens\x20.converted')['html']('('+(_0x283bd4['div'](0xde0b6b3a7640000)*Bridge['properties']['conversationRates']['USD'])['toFixed'](0x2)+'\x20USDT)'),jQuery('#myDividends\x20.converted')['html']('('+(_0x39c048[0x3]['div'](0xde0b6b3a7640000)*Bridge['properties']['conversationRates']['USD'])['toFixed'](0x2)+'\x20USDT)'),jQuery('#myDividends\x20.count')['html'](''+_0x39c048[0x3]['div'](0xde0b6b3a7640000)['toFixed'](0x4)),jQuery('.buy\x20.buyPrice')['html'](_0x39c048[0x4]['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20eth/token'),jQuery('.sell\x20.sellPrice')['html'](_0x39c048[0x5]['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20eth/token')]);});})['then'](function(){console['log']('parsed\x20frontend\x20stats');return Bridge['blockchain']['getBlockNumber']();})['then'](function(_0x2c4d44){Bridge['properties']['NewBlock']=_0x2c4d44;if(Bridge['properties']['LastBlock']==Bridge['properties']['NewBlock'])return![];console['log']('block\x20diff\x20found,\x20reiterating\x20through\x20txs');_allEvents=Bridge['properties']['Contract']['allEvents']({'fromBlock':Bridge['properties']['LastBlock'],'toBlock':Bridge['properties']['NewBlock']});return new Promise(function(_0x3a3b48,_0x453e33){_allEvents['get'](function(_0x1662d6,_0x54eec7){if(_0x1662d6)return _0x453e33(_0x1662d6);return _0x3a3b48(_0x54eec7);});});})['then'](function(_0x57c825){if(!_0x57c825)return;return Promise['each'](_0x57c825,function(_0x214184){var _0x3da268=Bridge['properties']['Web3']['eth']['accounts'][0x0]==_0x214184['args']['customerAddress'];if(Bridge['properties']['processedTxs'][_0x214184['transactionIndex']]==!![])return;Bridge['properties']['processedTxs'][_0x214184['transactionIndex']]=!![];console['log']('found\x20new\x20tx');if(_0x3da268){alertify['logPosition']('bottom\x20left');}else{alertify['logPosition']('bottom\x20right');}switch(_0x214184['event']){case'onTokenPurchase':if(_0x3da268){alertify['success']('Your\x20buy\x20order\x20is\x20confirmed!\x20You\x20spent\x20'+_0x214184['args']['incomingEthereum']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20ethereum\x20and\x20received\x20'+_0x214184['args']['tokensMinted']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20tokens.');}else{alertify['log']('Someone\x20else\x20bought\x20tokens.\x20They\x20spent\x20'+_0x214184['args']['incomingEthereum']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20ethereum\x20and\x20received\x20'+_0x214184['args']['tokensMinted']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20tokens.');}break;case'onTokenSell':if(_0x3da268){alertify['success']('Your\x20sell\x20order\x20is\x20confirmed!\x20You\x20received\x20'+_0x214184['args']['ethereumEarned']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20for\x20'+_0x214184['args']['tokensBurned']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20tokens.');}else{alertify['log']('Someone\x20else\x20sold\x20tokens.\x20They\x20received\x20'+_0x214184['args']['ethereumEarned']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20for\x20'+_0x214184['args']['tokensBurned']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'\x20tokens.');}break;case'onWithdraw':if(_0x3da268){alertify['success']('Your\x20withdrawal\x20request\x20is\x20confirmed!\x20You\x20received\x20'+_0x214184['args']['ethereumWithdrawn']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'.');}break;case'onReinvestment':if(_0x3da268){alertify['success']('Your\x20reinvestment\x20order\x20is\x20confirmed!\x20You\x20received\x20'+_0x214184['args']['tokensMinted']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'.\x20tokens.');}break;case'Transfer':if(_0x3da268){alertify['success']('Your\x20transfer\x20order\x20is\x20confirmed!\x20'+_0x214184['args']['to']+'\x20received\x20'+_0x214184['args']['tokens']['div'](0xde0b6b3a7640000)['toFixed'](0x4)+'.\x20tokens.');}break;}});})['then'](function(){console['log']('done');Bridge['properties']['LastBlock']=Bridge['properties']['NewBlock'];});}}};


jQuery(function(){
    console.log('start')

    // hook web3 
    Bridge.methods.connectWithMetamask()
    .then(function(_web3){
        console.log('hooked web3')
        
        // store web3
        Bridge.properties.Web3 = _web3
        Bridge.properties.Web3.eth.defaultAccount = Bridge.properties.Web3.eth.accounts[0]

        // connect with contract
        return Bridge.methods.connectWithContract()
    })
    .then(function(_contract){
        console.log('hooked contract')

        // store contract
        Bridge.properties.Contract = _contract

        // promisify fucking web3 callbacks
        return Promise.all([
            Promise.promisify(Bridge.properties.Contract.totalEthereumBalance),
            Promise.promisify(Bridge.properties.Contract.totalSupply),
            Promise.promisify(Bridge.properties.Contract.myTokens),
            Promise.promisify(Bridge.properties.Contract.myDividends),
            Promise.promisify(Bridge.properties.Contract.calculateTokensReceived),
            Promise.promisify(Bridge.properties.Contract.calculateEthereumReceived),
            Promise.promisify(Bridge.properties.Contract.buyPrice),
            Promise.promisify(Bridge.properties.Contract.buy),
            Promise.promisify(Bridge.properties.Web3.eth.getBlockNumber),
            Promise.promisify(Bridge.properties.Contract.sellPrice),
            Promise.promisify(Bridge.properties.Contract.stakingRequirement),
            Promise.promisify(Bridge.properties.Contract.transfer),
        ])
    })
    .then(function(_promisfied){
        console.log('promisified callbacks')

        // store promisified functions
        Bridge.blockchain.totalEthereumBalance = _promisfied[0]
        Bridge.blockchain.totalSupply = _promisfied[1]
        Bridge.blockchain.myTokens = _promisfied[2]
        Bridge.blockchain.myDividends = _promisfied[3]
        Bridge.blockchain.calculateTokensReceived = _promisfied[4]
        Bridge.blockchain.calculateEthereumReceived = _promisfied[5]
        Bridge.blockchain.buyPrice = _promisfied[6]
        Bridge.blockchain.buy = _promisfied[7]
        Bridge.blockchain.getBlockNumber = _promisfied[8]
        Bridge.blockchain.sellPrice = _promisfied[9]
        Bridge.blockchain.stakingRequirement = _promisfied[10]
        Bridge.blockchain.transfer = _promisfied[11]

        // hook dom interaction event listeners
        return Promise.all([
            jQuery(".buy input").bind('input', _.throttle(Bridge.events.onBuyPriceInputChange, 800)),
            jQuery(".sell input").bind('input', _.throttle(Bridge.events.onSellPriceInputChange, 800)),
            jQuery(".buy button").on('click', Bridge.events.onBuyButtonSubmit),
            jQuery(".sell button").on('click', Bridge.events.onSellButtonSubmit),
            jQuery(".transfer button").on('click', Bridge.events.onTransferButtonSubmit),
            jQuery("#reinvest").on('click', Bridge.events.onReinvestButtonSubmit),
            jQuery("#withdraw").on('click', Bridge.events.onWithdrawButtonSubmit)
        ])
        
    })
    .then(function(){
        return Bridge.blockchain.getBlockNumber()
    })
    .then(function(_blockNum){
        Bridge.properties.LastBlock = _blockNum
        return setInterval(Bridge.methods.refreshData, 1000)
    })
    .catch(function(err){
        console.log("Something went wrong.", err)
    })
    

})